<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="mapperInterface.MemberMapper">
<!--  
** interface 를 통해 ~Mapper 접근
=> interface ~Mapper.java 의 패키지명과 화일명과  
   ~Mapper.xml 의 패키지명, 화일명, namespace 값은 같아야됨. -->  

<!-- authList -->
	<select id="authList" resultType="vo.AuthVO">
		select authority from member_auth where member_id=#{member_id}
	</select>

<!-- 멤버리스트 -->
	<sql id="mlist">
		select member_id,name,gender,point,
 		SUBSTR(birthday,1,INSTR(birthday,'-')-1) birthday,
 		SUBSTR(address2,1,INSTR(address2,' ')-1) address2,
 		to_char(last_access,'YYYY-MM-DD HH24:MI') last_access
	</sql>

	<sql id="grantedPoint">
		and
		<![CDATA[ (select case when sum(point)<500 then '플레인'
     	when sum(point)>=500 and sum(point)<10000 then '브론즈'
		when sum(point)>=10000 and sum(point)<100000 then '실버'
		when sum(point)>=100000 and sum(point)<1000000 then '골드'
		else '다이아몬드'
		end from points where grantee=m.member_id)
		in]]>
   		<foreach collection="check" item="it" open="(" close=")" separator=",">
   			#{it}
   		</foreach> 			
	</sql>

	<sql id="follower">
		<if test="check != null">
		and
		<![CDATA[ (select case when count(*)<500 then '플레인'
     	when count(*)>=500 and count(*)<10000 then '브론즈'
		when count(*)>=10000 and count(*)<100000 then '실버'
		when count(*)>=100000 and count(*)<1000000 then '골드'
		else '백만이상'
		end from follow where following=m.member_id)
		in]]>
   		<foreach collection="check" item="it" open="(" close=")" separator=",">
   			#{it}
   		</foreach>		
   		</if>	
	</sql>

	<sql id="purchase">
		<if test="check != null">
		and
		<![CDATA[ (select case when count(*)<500 then '플레인'
     	when count(*)>=500 and count(*)<10000 then '브론즈'
		when count(*)>=10000 and count(*)<100000 then '실버'
		when count(*)>=100000 and count(*)<1000000 then '골드'
		else '백만이상'
		end from purchase where member_id=m.member_id)
		in]]>
   		<foreach collection="check" item="it" open="(" close=")" separator=",">
   			#{it}
   		</foreach>  		
   		</if>	
	</sql>

	<sql id="address">
		<if test="check1 != null">
		and
		SUBSTR(address2,1,INSTR(address2,' ')-1)
		in
   		<foreach collection="check1" item="it" open="(" close=")" separator=",">
   			#{it}
   		</foreach>  		
   		</if>	
	</sql>

	<sql id="birthday">
		<if test="range1 != null">
		and
		TO_NUMBER(SUBSTR(birthday,1,INSTR(birthday,'-')-1))
		between
   		<foreach collection="range1" item="it" separator=" and ">
   			TO_NUMBER(#{it})
   		</foreach> 		
   		</if>	
	</sql>

<!-- ** Member Search, Check, Range, Order List --> 
   <select id="checkList" resultType="vo.MemberVO">
		<include refid="mlist"></include> from
		(select m.*, ROW_NUMBER() OVER(order by
   		<include refid="selectColumn"></include>	
		) rnum from member m where member_id!='admin'
		<include refid="search"></include>
		<include refid="address"></include>
		<include refid="birthday"></include>
 		) where rnum between #{sno} and #{eno}
   </select>

	<sql id="selectOrder">
		<choose>
			<when test="order=='asc'.toString()">
				asc
			</when>
		  	<otherwise>desc</otherwise>
		</choose>
	</sql>

	<sql id="selectColumn">
		<choose>
			<when test="column=='member_id'.toString()">
				member_id <include refid="selectOrder"></include>	
			</when>
			<when test="column=='name'.toString()">
				name <include refid="selectOrder"></include>
			</when>
		  	<when test="column=='gender'.toString()">
				gender <include refid="selectOrder"></include>
			</when>
		  	<when test="column=='birthday'.toString()">
				birthday <include refid="selectOrder"></include>
			</when>
		  	<when test="column=='address2'.toString()">
				address2 <include refid="selectOrder"></include>
			</when>
		  	<when test="column=='point'.toString()">
				point <include refid="selectOrder"></include>
			</when>
		  	<otherwise>last_access <include refid="selectOrder"></include></otherwise>
		</choose>
	</sql>
 	
	<sql id="search">
		<if test="keyword != null">
			<bind name="keyVal" value="'%'+keyword+'%'"/>
		</if>
		<choose>
			<when test="searchType=='i'.toString()">
				and member_id LIKE #{keyVal} 
			</when>
			<when test="searchType=='a'.toString()">
  				and name Like #{keyVal} 
	  		</when>
		  	<when test="searchType=='ia'.toString()">
		  		and (member_id Like #{keyVal}
		  		or name Like #{keyVal}) 
		  	</when>
		  	<otherwise></otherwise>
		</choose>
	</sql>

	<select id="searchRowsCount" resultType="int">
		select count(*) from member where (id!='admin' 
		<include refid="search"></include>	
	</select>

	<!-- myPage, 로그아웃form 요청시 last access 수정 -->
	<update id="updateLastAccess">
		update member set last_access=sysdate where member_id=#{member_id}
	</update>

	<!-- 휴면계정 7, 회원탈퇴 8, 회원제명 9 /  인가 1 -->
	<update id="changeStatus">
		update member
		set (enabled, status, last_access)
		= (select #{enabled}, #{status}, sysdate from dual)
		where member_id=#{member_id}
	</update>
 
 	<!-- 판매자 삭제 -->
	<delete id="deleteSeller">
		delete from seller where member_id=#{member_id}
	</delete> 
 	
 	<!-- ** CRUD 기본 ** -->
 	<select id="selectList" resultType="vo.MemberVO">
 		<include refid="mlist"></include> from member where member_id!='admin'
 	</select>
 
 	<select id="selectOne" resultType="vo.MemberVO">
		select * from member where member_id = #{member_id}
	</select>

	<insert id="insert">
		insert into member(member_id,name,password,gender,birthday,address1,address2,address3,email,phone,interest,sns,profile)
		values(#{member_id},#{name},#{password},#{gender},#{birthday},#{address1},#{address2},#{address3},#{email},#{phone},#{interest},#{sns},#{profile})
	</insert>
	
	<update id="update">
		update member set (name,gender,birthday,address1,address2,address3,email,phone,interest,sns,profile)
		= (select #{name},#{gender},#{birthday},#{address1},#{address2},#{address3},#{email},#{phone},#{interest},#{sns},#{profile} from dual)
		where member_id=#{member_id}
	</update>
	
	<delete id="delete">
		delete from member where member_id=#{member_id}
	</delete>
 
</mapper>