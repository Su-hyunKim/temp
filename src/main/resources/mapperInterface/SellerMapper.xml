<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="mapperInterface.SellerMapper">  

<!-- Product List -->
	<select id="productList" resultType="vo.ProductVO">
		select product_id, name from product where member_id=#{member_id}
	</select>

<!-- 검색결과 리스트 -->
	<sql id="list">
		select member_id,company_name,representative,employer_id,corporation_id,
 		SUBSTR(launch_date,1,INSTR(launch_date,'-')-1) launch_date,
 		SUBSTR(location2,1,2) location2,
 		business_type
	</sql>

	<sql id="grantedPoint">
		and
		<![CDATA[ (select case when sum(point)<500 then '플레인'
     	when sum(point)>=500 and sum(point)<10000 then '브론즈'
		when sum(point)>=10000 and sum(point)<100000 then '실버'
		when sum(point)>=100000 and sum(point)<1000000 then '골드'
		else '다이아몬드'
		end from points where grantee=s.member_id)
		in]]>
   		<foreach collection="check" item="it" open="(" close=")" separator=",">
   			#{it}
   		</foreach> 			
	</sql>

	<sql id="address">
		<if test="check1 != null">
		and
 		SUBSTR(location2,1,2)
		in
   		<foreach collection="check1" item="it" open="(" close=")" separator=",">
   			#{it}
   		</foreach>  		
   		</if>	
	</sql>

	<sql id="date">
		<if test="range1 != null">
		and
		TO_NUMBER(SUBSTR(launch_date,1,INSTR(launch_date,'-')-1))
		between
   		<foreach collection="range1" item="it" separator=" and ">
   			TO_NUMBER(#{it})
   		</foreach> 		
   		</if>	
	</sql>

	<sql id="product">
		<if test="range2 != null">
		and
		(select count(*) from purchase where member_id=s.member_id)
		between
   		<foreach collection="range2" item="it" separator="and">
   			#{it}
   		</foreach>  		
   		</if>	
	</sql>

	<sql id="follower">
		<if test="range3 != null">
		and
		(select count(*) from follow where following=s.member_id)
		between
   		<foreach collection="range3" item="it" separator="and">
   			#{it}
   		</foreach>		
   		</if>	
	</sql>

	<!-- Seller Search, Check, Range, Order List --> 
   <select id="checkList" resultType="vo.SellerVO">
		<include refid="list"></include> from
		(select s.*, ROW_NUMBER() OVER(order by
   		<include refid="selectColumn"></include>	
		) rnum from seller s where member_id!='admin'
		<include refid="search"></include>
		<include refid="address"></include>
		<include refid="date"></include>
		<include refid="product"></include>
		<include refid="follower"></include>
 		) where rnum between #{sno} and #{eno}
   </select>

	<sql id="selectOrder">
		<choose>
			<when test="order=='asc'.toString()">
				asc
			</when>
		  	<otherwise>desc</otherwise>
		</choose>
	</sql>

	<sql id="selectColumn">
		<choose>
			<when test="column=='employer_id'.toString()">
				employer_id <include refid="selectOrder"></include>	
			</when>
			<when test="column=='company_name'.toString()">
				company_name <include refid="selectOrder"></include>
			</when>
		  	<when test="column=='representative'.toString()">
				representative <include refid="selectOrder"></include>
			</when>
		  	<when test="column=='launch_date'.toString()">
				launch_date <include refid="selectOrder"></include>
			</when>
		  	<when test="column=='location2'.toString()">
				location2 <include refid="selectOrder"></include>
			</when>
		  	<when test="column=='corporation_id'.toString()">
				corporation_id <include refid="selectOrder"></include>
			</when>
		  	<otherwise>member_id <include refid="selectOrder"></include></otherwise>
		</choose>
	</sql>
 	
	<sql id="search">
		<if test="keyword != null">
			<bind name="keyVal" value="'%'+keyword+'%'"/>
		</if>
		<choose>
			<when test="searchType=='c'.toString()">
				and company_name LIKE #{keyVal} 
			</when>
			<when test="searchType=='r'.toString()">
  				and representative Like #{keyVal} 
	  		</when>
		  	<when test="searchType=='cr'.toString()">
		  		and (company_name Like #{keyVal}
		  		or representative Like #{keyVal})
		  	</when>
		  	<when test="searchType=='type'.toString()">
		  		and business_type Like #{keyVal}
		  	</when>
		  	<otherwise></otherwise>
		</choose>
	</sql>

	<select id="searchRowsCount" resultType="int">
		select count(*) from seller s where member_id!='admin' 
		<include refid="search"></include>
		<include refid="address"></include>
		<include refid="date"></include>
		<include refid="product"></include>
		<include refid="follower"></include>	
	</select>
	
	<select id="totalRowCount" resultType="int">
		select count(*) from seller s where member_id!='admin' 	
	</select>

<!-- myPage, 로그아웃form 요청시 last access 수정 -->
	<update id="updateLastAccess">
		update member set last_access=sysdate where member_id=#{member_id}
	</update>

<!-- 회원탈퇴 8, 회원제명 9 /  인가 1, 휴면계정 7 -->
	<update id="changeStatus">
		update member
		set (enabled, status, last_access)
		= (select #{enabled}, #{status}, sysdate from dual)
		where member_id=#{member_id}
	</update>
 	
 <!-- CRUD 기본 -->
 	<select id="selectList" resultType="vo.SellerVO">
 		<include refid="list"></include> from seller where member_id!='admin'
 	</select>
 
 	<select id="selectOne" resultType="vo.SellerVO">
		select * from seller where member_id = #{member_id}
	</select>

	<insert id="insert">
		insert into seller(member_id,company_name,representative,employer_id,corporation_id,launch_date,location1,location2,location3,business_email,business_phone,business_type,business_items,tax_office,logo)
		values(#{member_id},#{company_name},#{representative},#{employer_id},#{corporation_id},#{launch_date},#{location1},#{location2},#{location3},#{business_email},#{business_phone},#{business_type},#{business_items},#{tax_office},#{logo})
	</insert>
	
	<update id="update">
		update seller set (company_name,representative,employer_id,corporation_id,launch_date,location1,location2,location3,business_email,business_phone,business_type,business_items,tax_office,logo)
		= (select #{company_name},#{representative},#{employer_id},#{corporation_id},#{launch_date},#{location1},#{location2},#{location3},#{business_email},#{business_phone},#{business_type},#{business_items},#{tax_office},#{logo} from dual)
		where member_id=#{member_id}
	</update>
	
	<delete id="delete">
		delete from seller where member_id=#{member_id}
	</delete>
 
</mapper>